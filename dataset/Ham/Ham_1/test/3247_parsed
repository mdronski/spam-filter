 return-path email delivery-d sat sep number number number from email (tim peters) date fri number sep number number number subject [spambayes] ditch wordinfo in-reply-to email message-id email [neal pickett]  i hack up someth to turn wordinfo into a tupl befor pickl that what wordinfo.__getstate__ doe  and then turn the tupl back into wordinfo right after unpickl likewis for wordinfo.__setstate__  without this hack my databas was number byte after it number byte  that a percent save not a bad optim i'm not sure what you'r do but suspect you'r store individu wordinfo pickl if so most of the administr pickl bloat is due to that and doesn't happen if you pickl an entir classifi instanc direct  so my question is would it be too pain to ditch wordinfo in favor of  a straight out tupl (or list if you'd rather although make it a  tupl has the nice side-effect of forc you to play nice with my  dbdict class)   i hope do this sort of optim isn't too far distant from the  goal of this project even though readme.txt say it is :)   diff attach i'm not comfort check this in i think it healthi that you'r uncomfort check thing in with  + # xxx kludg kludg kludg comment   sinc i don't realli like how it work (i'd rather just get rid of wordinfo)  but i guess it prove the point :) i'm not interest in optim anyth yet and get mani benefit from the *ease* of work with utter vanilla python instanc object lot of code all over pick these apart for display and analysi purpos veri few peopl have tri this code yet and there are still mani question about it (see e.g. jeremi writeup of his disappoint first-tim experi today) let keep it as easi as possibl to modifi for now if you'r despar to save memori write a subclass other peopl are free to vote in other direct of cours 