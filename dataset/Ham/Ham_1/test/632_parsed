 from email fri aug number number number return-path email delivered-to email receiv from localhost (localhost number by phobos.labs.netnoteinc.com (postfix) with esmtp id number for email fri number aug number number number (edt) receiv from phobo number by localhost with imap number for email (single-drop) fri number aug number number number (ist) receiv from webnote.net (mail.webnote.net number by dogma.slashnull.org number with esmtp id number for email fri number aug number number number receiv from lugh.tuatha.org email number by webnote.net number with esmtp id number for email fri number aug number number number receiv from lugh email number by lugh.tuatha.org number with esmtp id number fri number aug number number number x-authentication-warn lugh.tuatha.org host email number claim to be lugh receiv from number number number by lugh.tuatha.org number with smtp id number for email fri number aug number number number receiv from unknown (helo number email with login) by number with smtp number aug number number number message-id email from "matthew french" email to "brian o'donoghue" email cc email refer email subject re [ilug] slashdot ew dijkstra humor date fri number aug number number number mime-vers number content-typ text/plain number content-transfer-encod number x-prioriti number x-msmail-prior normal x-mailer microsoft outlook express number x-mimeol produc by microsoft mimeol number sender email errors-to email x-mailman-vers number preced bulk list-id irish linux user group  x-beenther email brian o'donoghu wrote a code fragment  number  {  some_thing_goes_here()   number  do_someth   } unfortun strlen is a relat expens oper if you are use c++ this is not such a big issu as string.length() can be declar const so long as you do not modifi the string object the compil can do the cach for you i do not think this is possibl in c though you could write the same code fragment as ============================ number { some_thing_goes_here() number do_something() } ============================ note my previous point if some_thing_goes_here() or do_something() are veri long function then there is no real need to optimis this code also for string manipul a much better approach would be ============================ char c char* p number { some_thing_goes_here() number do_something() } ============================ this work becaus c use number termin string it improv perform becaus you alway have a pointer to the charact instead of have to do array manipul strict speak the variabl c is not requir as most compil are smart enough to store *p in a regist the problem is that this use pointer arithmet which can make the code illeg if not manag care which is one of the reason i prefer java for most program task :) - matthew __________________________________________________ do you yahoo! everyth you'll ever need on one web page from news and sport to email and music chart URL -- irish linux user group email URL for (un)subscript inform list maintain email