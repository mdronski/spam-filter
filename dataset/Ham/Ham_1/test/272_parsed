 john gay wrote  look into these thing as isaid the pgcc site doe not seem to have been  updat in at least a year or more?! i am also look into gcc itself now  that the number seri is out it might be better than when the pgcc patch  were written gcc has been as good as or better than pgcc for quit a while pgcc was was written back in the day when gcc splinter due to a percept of slow progress on the main branch a number of linux distribut wound up use egc part deriv from the pgcc work as i recal happi was restor to the world with gcc number and later  the bottom line is pentium have better instruct set than  the origin number instruct that they still support not realli no the onli instruct of consequ (to gcc anyway) sinc the number was the cmov introduc with the pentium pro gcc number will use that instruct if direct to with -march=pentiumpro and you will general get a few percent improv out of it code compil with that option will fail on pentium and earlier processor  the pentium also  start introduc pipelin so proper generat code can be upto percent  faster than equivul code that perform the same function that the art of instruct schedul - rearrang the instruct generat by the compil such that they make best use of the parallel ("superscalar") pipelin present in a modern cpu gcc number has a fair go at schedul accord to the -mcpu=pentium/pentiumpro option gcc number doe a better job and fine tune for a few more processor such as athlon and athlon-xp they'r in the process of replac the compil instruct schedul with a whole new mechan that should do an even better job but that a way down the road yet in gcc number as for the exot extra instruct set gcc number will make use of sse or number instruct instead of number instruct if you use the -mfpmath=ss option and you may see some speed benefit from it but there a chanc you may also see incompat gcc will still use number code for miss function in the sse instruct set (doubl precis float for example) afaik no current gcc will ever use mmx or number instruct though gcc number enabl user code to explicit generat these instruct with c code the kernel sometim use these instruct set to get super-fast block copi of memori or raid math but not much els  not sure what improv the number introduc i think it most just speed  improv rather than ani execut chang number introduc number a _much_ improv version of sse and a viabl replac for number fpu code sse support onli singl precis float while number can handl doubl mmx and sse share regist with the fpu which hobbl them a bit but number has it own larg dedic regist file so far number is the onli cpu equip with number amd number cpus are said to have it as well of cours number itself is a whole other ball game.. paul -- irish linux user group email URL for (un)subscript inform list maintain email