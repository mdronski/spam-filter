 from email wed aug number number number return-path email delivered-to email receiv from localhost (localhost number by phobos.labs.netnoteinc.com (postfix) with esmtp id number for email wed number aug number number number (edt) receiv from phobo number by localhost with imap number for email (single-drop) wed number aug number number number (ist) receiv from xent.com number by dogma.slashnull.org number with esmtp id number for email wed number aug number number number receiv from lair.xent.com (localhost number by xent.com (postfix) with esmtp id number wed number aug number number number (pdt) delivered-to email receiv from jamesr.best.vwh.net (jamesr.best.vwh.net number by xent.com (postfix) with smtp id number for email wed number aug number number number (pdt) receiv (qmail number invok by uid number number aug number number number receiv from unknown (helo avalon) number (envelope-send email by number number with smtp for email number aug number number number subject re java is for kiddi from jame roger email to email in-reply-to email refer email email content-typ text/plain content-transfer-encod number x-mailer number message-id email mime-vers number sender email errors-to email x-beenther email x-mailman-vers number preced bulk list-help email list-post email list-subscrib URL email list-id friend of rohit khare  list-unsubscrib URL email list-arch URL date number aug number number number on tue number at number joseph s barrera iii wrote   c is more reliabl than java? both are reliabl "reliability" is more a function of the softwar engin i'v written complic mission-crit server softwar in java that will run without a hiccup as long as the unix box it is sit on is run same with c for process that are run month at a time and in my case constant touch databas and do lot of low-level network stuff reliabl is obtain by make sure everi conceiv problem (and problem you didn't conceiv of) recov to a clean/saf process state so that thing keep run i.e it is a design/program issu that said we usual prototyp serious system in java and then re-impl them in c if we have time java doesn't scale well as a languag for server app though not for the reason usual offer the problem is that for high-end server app you realli need fair detail and low-level control of system resourc to get around bottleneck that show up relat quick in languag that don't give you access to it you can squeez sever time the perform out of a c server program than a java one simpli by be abl to fine tune (or more frequent bypass) the system resourc manag nonetheless this is not a signific factor for most applic you could conceiv develop in either languag as most aren't limit by raw perform scalabl -jame roger email