 return-path email delivery-d fri sep number number number from email (tim peters) date fri number sep number number number subject [spambayes] deploy in-reply-to email message-id email [jeremi hylton]  i think one step toward deploy is creat a re-us token  for mail messag the current codebas doesn't expos an easy-to-us  or easy-to-custom token tokenize() couldn't be easier to use it take a string argument and produc a stream of token (whether via explicit list or generat or tupl or .. doesn't matter) all the tokenize() function in gbayes.pi and timtest.pi are freeli interchang this way note that we have no evid to support that a customiz token would do ani good or if it would in which way custom could be help that a research issu on which no work has been done  the timtest modul seem to contain an enorm bodi of practic  knowledg about how to pars mail messag but the modul wasn't  design for re-us that part a failur of imagin  split out all knowledg of token is just a larg block cut-and-past .. there it done chang the from timtoken import token at the top to use ani other token now if you want to make it easier still feel free to check in someth better  i'd like to see a modul that can take a singl messag or a collect of  messag and token each one the msg and msgstream class in timtest.pi are a start at that but it hard to do anyth truli *useful* here when peopl use all sort of differ physic represent for email msgs (mbox in various format one file per "folder" one file per msg skip gzip gimmick ...) if you'r a python coder  you *should* find it veri easi to chang the gut of msg and msgstream to handl your peculiar scheme defin interfac for these guy should be done  i'd like to see the token by customiz too tim had to exclud  some header from his test data becaus there were particular bias  in the test data if other peopl have test data without those  bias they ought to be abl to custom the token to includ  them or exclud other this sound like a bottomless pit to me and there no easier way to custom than to edit the code as readme.txt still say though massiv refactor would help hop to it