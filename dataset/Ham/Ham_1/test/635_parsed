 from email fri aug number number number return-path email delivered-to email receiv from localhost (localhost number by phobos.labs.netnoteinc.com (postfix) with esmtp id number for email fri number aug number number number (edt) receiv from phobo number by localhost with imap number for email (single-drop) fri number aug number number number (ist) receiv from webnote.net (mail.webnote.net number by dogma.slashnull.org number with esmtp id number for email fri number aug number number number receiv from lugh.tuatha.org email number by webnote.net number with esmtp id number for email fri number aug number number number receiv from lugh email number by lugh.tuatha.org number with esmtp id number fri number aug number number number receiv from number number by lugh.tuatha.org number with esmtp id number for email fri number aug number number number x-authentication-warn lugh.tuatha.org host number claim to be number receiv by number with internet mail servic number id number fri number aug number number number message-id email from "brian o'donoghue" email to email email subject re [ilug] slashdot ew dijkstra humor date fri number aug number number number mime-vers number x-mailer internet mail servic number content-typ text/plain number sender email errors-to email x-mailman-vers number preced bulk list-id irish linux user group  x-beenther email  oop i tend to feel like that most time i tend to feel that if we  have extrem good compil tool then those tool should be abl  to do the inlin and optimis far better than i could that the  theori anyway :) and there alway a tradeoff with inlin between  speed and memori bloat (which may sometim be no tradeoff if swap  start get involved...) yes and i understand that argument howev sometim i find that if i don't tri to write code in the least space possibl or for exampl becom lazi and say --bad style bool q if(q) when i should say if(q==true) or --bad optim int a a=some_function() if(a)  appar work but is bad code style that what i mean about let the program tool take care of the coding... it consid bad appar or for exampl say you are write a loop that say number { some_thing_goes_here() number do_someth } when i probabl should say c=strlen(somestring) number { some_thing_goes_here() if(b=c) do_someth } of cours peopl alway say that the extra call to strlen() will make no differ on the machin we have these day but my machin has number of ram... not number  i'm just rant  -- irish linux user group email URL for (un)subscript inform list maintain email