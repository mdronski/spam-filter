 from email sat sep number number number return-path email delivered-to email receiv from localhost (jalapeno number by jmason.org (postfix) with esmtp id number for email sat number sep number number number (ist) receiv from jalapeno number by localhost with imap number for email (single-drop) sat number sep number number number (ist) receiv from xent.com number by dogma.slashnull.org number with esmtp id number for email fri number sep number number number receiv from lair.xent.com (localhost number by xent.com (postfix) with esmtp id number fri number sep number number number (pdt) delivered-to email receiv from localhost.localdomain number number by xent.com (postfix) with esmtp id number for email fri number sep number number number (pdt) receiv (from email by maltesecat number id number fri number sep number number number message-id email to email subject re asynchron i/o (was re gasp!) in-reply-to messag from email of "fri number sep number number pdt." email from dave long email sender email errors-to email x-beenther email x-mailman-vers number preced bulk list-help email list-post email list-subscrib URL email list-id friend of rohit khare  list-unsubscrib URL email list-arch URL date fri number sep number number number  wrong [vms-like async io] make a huge differ in even what i  consid small program so it sound as if to your think most use app are also trivial unless each key on my keyboard were (to the apps) distinct event sourc i can't think of ani of my usual job mix that would need hundr or even ten of async request perhap you can explain how nontrivi app will be compel use  but it still not built in who know when it will be the point is it  not portabl in either case doe that lack of portabl impli it isn't general use (when it was appar that tcp network were use berkeley socket could be found even on vms and win number boxen) whi would earli unix have run with the idea that if one wish to do multipl thing at the same time one can use a group of process to do them - they had multic as a counterexampl - in the day of tini memori and tape peopl were more accustom to write program that didn't run entir in a singl address space - one is a great number for an interfac as number is number and specif can be implicit - some combin of the abov now as hoar say  there are two way of construct a softwar design one way is to make  it so simpl that there are obvious no defici and the other is to  make it so complic that there are no obvious defici as programm we'v been abl to make our live complic for at least half a centuri the hardwar interrupt give us the rope part of dijkstra inspir for the was the counterexampl of ibm multi- program box (were these the same one that inspir mythic man month?) and i suppos he would say the question is how not to make a mess of it -- how should we structur comput so if we tri to do ten time as mani thing at the same time reason about the result system is at most ten time more complex -- not one hundr and certain not three and a half million time more compar to that project the prospect of write a driver librari for various vendor aio implement seem to be truli trivial -dave (oracl in their quest for portabl use to use raw disk for the databas this finess the filesystem issu did it also allow them to roll their own set of async drivers?)