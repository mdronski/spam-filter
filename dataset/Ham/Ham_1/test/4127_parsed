 no you need to learn how declar work in c you have specifi testbuff as "an array of number pointer to characters" that mean you have alloc an array big enough to store number pointer on most machin that number byte per pointer which inde would give you number john on fri nov number number at number number ali saifullah khan wrote  here is a test done on the return of size by sizeof() use pointer   #includ    int main(void) {  char number   int len = sizeof(testbuff)  cout  len  "\n"  return number  }     number   the output from this is number but infact it should be return number  appar use a pointer has multipli the valu of the origin size of  the testbuff[] buffer by the size of the " pointer "    char pointer have a size of number bytes.....a is shown when output is number byte  use " int len = sizeof((char*)testbuff) "     number   so sizeof is return the size of the "first" entiti pass to it that  be the size of the pointer " * "   what confus is when sizeof output the valu for someth like " char *  testbuff[] "  here the macro seem to be multipli the size of entiti pass to it  by consid the first entiti as the pointer denot by the asterisk  itself " * " and then take this valu of number and multipli it with the  size of the buffer testbuff[] which is number to produc an output of number   rather strang behaviour ??  ----- origin messag -----  from email  to email  cc email  sent tuesday novemb number number number am  subject re are bad develop librari the problem with dollar softwar     ----- origin messag -----   from john viega   sent number number pm   to email   cc email   subject re are bad develop librari the problem with dollar softwar      strlen doe not work becaus he was tri to get at the alloc    size of a buffer not the actual size of the buffer     you'r right i was look at the safe_strncpi code and it look like  the author did use strlen      sizeof will return the size of the data type pass to it so if you    declar mystr as char number it will return as the origin    author want     it will not work with a char* so if your string are dynam  alloc or pass to you as a pointer these macro will not work        