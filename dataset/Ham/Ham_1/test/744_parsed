 from email wed aug number number number return-path email delivered-to email receiv from localhost (localhost number by phobos.labs.netnoteinc.com (postfix) with esmtp id number for email wed number aug number number number (edt) receiv from phobo number by localhost with imap number for email (single-drop) wed number aug number number number (ist) receiv from xent.com number by dogma.slashnull.org number with esmtp id number for email wed number aug number number number receiv from lair.xent.com (localhost number by xent.com (postfix) with esmtp id number wed number aug number number number (pdt) delivered-to email receiv from jamesr.best.vwh.net (jamesr.best.vwh.net number by xent.com (postfix) with smtp id number for email wed number aug number number number (pdt) receiv (qmail number invok by uid number number aug number number number receiv from unknown (helo avalon) number (envelope-send email by number number with smtp for email number aug number number number subject re java is for kiddi from jame roger email to email in-reply-to email refer email email content-typ text/plain content-transfer-encod number x-mailer number message-id email mime-vers number sender email errors-to email x-beenther email x-mailman-vers number preced bulk list-help email list-post email list-subscrib URL email list-id friend of rohit khare  list-unsubscrib URL email list-arch URL date number aug number number number on wed number at number gari lawrenc murphi wrote   and a java program due to the extens class librari will weigh  in at percent the number of line of the equival c program qed my typic java-to-c convers doesn't increas the line of code by more than percent and a fair portion of that is the implement of addit featur that drove us to do the convers in the first place some thing are substanti more succinct when written in c than in java c and most other matur languag have an endless collect of librari i person don't use anyth beyond the core librari of ani languag that much though on a tangent i find librari near useless for a great mani thing due primarili to the fact that most of them are so general that a given non-trivi api almost alway has a context in which it will function in a patholog manner code reus is wonder and all that but librari frequent make design trade-off that won't work for me even if they theoret do exact what i need unfortun it isn't particular easi nor doe it make a nice simpl api to design a librari that realli is optimiz to a wide rang of design case i'v built a small collect of flexibl psuedo-polymorph api over the year that i tend to use but it is a pretti ugli solut for code reus when you get right down to it -jame roger email