 adam beberg write  on tue number sep number kragen sitak wrote   unix acquir nonblock i/o in the form of select() about number year   ago and solari has had the particular aio_* call we are discuss   for mani year   select() "scaling" is a joke at best and i know you know that poll() is  onli a bit better not onli do i know that the post to which you were respond explain that with somewhat more detail than "a joke" as you should know but evid don't poll() isn't even "a bit better" --- in fact it about an order of magnitud wors --- for dens file descriptor set which is the normal case (except on oper system where select() isn't a system call but a librari routin that call poll().)   veri few applic need the aio_* call --- essenti onli   high-perform rdbms server even benefit from them at all and   most of those have been fake it fine for a while with multipl   thread or process this just provid a modicum of extra   perform   wrong it make a huge differ in even what i consid small program whi don't you explain this in more detail   although i don't have a copi of the spec handi i think the aio_* api   come from the posix spec ieee std number section number which is   number year old and which i think document then-curr practic   they might be even older than that   yes sgi has a patch to the linux kernel to implement the aio_ interfac  but it still not built in who know when it will be the point is it  not portabl in either case you origin said could it be after number year without this featur unix final catch up to window and has i/o that doesnt [sic] total suck for nontrivi app no way the point --- my point the point i was discuss pleas don't tri to tell me you were tri to make a differ point becaus i don't care --- is that you had no clue what you were talk about unix hasn't been without this featur and in fact has had it sinc you were in elementari school and oper system without it don't "total suck for nontrivi apps" for what it worth glibc has actual implement the aio_* call for a while just in a way that doesn't scale to larg number of concurr i/o request i find refer to the glibc implement as far back as number and glibc number and i could probabl find much earlier refer if i had time number (more detail at URL detail on the sgi patch are at URL   unix has been multiprocess sinc number and most unix implement   have support multithread for a decad or more   and most unix is still kinda-sorta support the pthread (posix)  interfac each in their own number implement you'r safe if you  stick to the basic your origin complaint was that unix didn't do multithread or multiprogram well now that i'v point out how obvious idiot that claim is you'v amend your complaint now although individu unix do these thing well you complain that their implement are not entir conform with the posix thread specif well that probabl true but i haven't written pthread program in c much myself so i can't confirm it from my own experi but even if it true it not a veri good reason to prefer window i'm sure you can provid exampl of bug in particular thread implement spare us just shut up -- email kragen sitak URL edsger wybe dijkstra die in august of number the world has lost a great man see number and number for detail