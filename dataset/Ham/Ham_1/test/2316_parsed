 from email tue aug number number number return-path email delivered-to email receiv from localhost (localhost number by phobos.labs.netnoteinc.com (postfix) with esmtp id number for email tue number aug number number number (edt) receiv from phobo number by localhost with imap number for email (single-drop) tue number aug number number number (ist) receiv from xent.com number by dogma.slashnull.org number with esmtp id number for email tue number aug number number number receiv from lair.xent.com (localhost number by xent.com (postfix) with esmtp id number tue number aug number number number (pdt) delivered-to email receiv from argote.ch (argote.ch number by xent.com (postfix) with esmtp id number for email tue number aug number number number (pdt) receiv by argote.ch (postfix from userid number id number tue number aug number number number (cest) to email subject re # ellipt curv point count made easi message-id email from email (robert harley) sender email errors-to email x-beenther email x-mailman-vers number preced bulk list-help email list-post email list-subscrib URL email list-id friend of rohit khare  list-unsubscrib URL email list-arch URL date tue number aug number number number (cest) gordon mohr wrote  this mean that elipt curv encrypt is  easili breakabl or faster than befor with  loss in strength or stronger   bit are ok cook bit are better oh ok these result don't help break ec crypto at all with rsa you pick a number with secret factor and to break the cryptosystem you can factor the number due to fast sub-exponenti algorithm for factor the number had better be number bit at the veri least (record = number bits) with ec you pick a curv and pick point on the curv with secret discret logarithm to break the cryptosystem you can comput a discret log but the best algorithm for random curv are exponenti (record = number bit for a slight special curve) up until now peopl pick curv chosen from a small fix set one choic is a few curv with special properti that origin were chosen to make point-count easier and can also speed up the crypto oper but in some case they can also speed up attack not on curv deploy at the moment but the danger exist the other choic is to precomput a hand of random curv the nsa did this a few year ago when it took hour on a fast machin and nist standard those curv what chang is that it is now possibl is to generat your own curv on an ordinari pc this has been get easier and easier with small curv take second on a fast machin sinc a year or two now even reason big curv take second on a typic pc this mean that you don't have to reli on standard curv but can distribut risk over mani curv in case some get broken at some stage in certain circumst you can even keep the curv itself secret so an attack doesn't know which discret log to tri to comput there isn't realli a good analog with rsa but imagin want to factor a number and you don't even know what it is.. so basic recent progress has made new thing feasibl and this make them even more so the under primit for sign encod and so on are not affect but the secur vibe get better r URL