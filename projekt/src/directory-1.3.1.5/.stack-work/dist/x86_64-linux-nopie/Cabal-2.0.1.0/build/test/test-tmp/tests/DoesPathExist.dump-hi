
==================== FINAL INTERFACE ====================
2018-01-21 20:57:09.199646337 UTC

interface main:DoesPathExist 8022
  interface hash: 6a56185c591129d9e3686f2214e488be
  ABI hash: 7c8cb4926cb4251e33327496eb34f47a
  export-list hash: 90cbfff871829d4366175e937d635643
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 96cda4d171844b9c139a00e66ee6eec2
  sig of: Nothing
  used TH splices: False
  where
exports:
  DoesPathExist.main
module dependencies: Util
package dependencies: array-0.5.2.0 base-4.10.1.0* deepseq-1.4.3.0
                      directory-1.3.1.5 filepath-1.4.1.2 ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0 time-1.8.0.2 unix-2.7.2.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  directory-1.3.1.5:System.Directory 674a63b5dfd5e6dd78c98f0675c7b451
import  -/  directory-1.3.1.5:System.Directory.Internal.Prelude 80f416161b0247624c76ff798606c39d
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  Util be2abed7083a51f4bdf8855a2d51cf9d
  exports: bd6a289d318cbda8f1f2ee2253928220
  TestEnv a2cda7416f6d830e42cdb7d432cd2a75
  expect a04a7356ad9c9c3a0cd7efbf55e7bd32
addDependentFile "tests/util.inl"
addDependentFile "/home/mdronski/.stack/programs/x86_64-linux/ghc-nopie-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux-nopie/Cabal-2.0.1.0/build/test/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
0e9c7886516017a47851e1786efedee7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DoesPathExist.$trModule3
                   DoesPathExist.$trModule1) -}
8c8d37e696f3e166119539dd01e5d287
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS DoesPathExist.$trModule2) -}
2ff7ab35376082512fedaf402b41f6ce
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DoesPathExist"#) -}
b718a6fc9decaf65757c5eac2295d8a3
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS DoesPathExist.$trModule4) -}
232caa9ba542c0b553a5263d0255c547
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
5b047262a867febf4f2d2384668b9065
  $wmain ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.IORef.IORef GHC.Types.Int)
                   (ww1 :: GHC.Types.Bool)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        DoesPathExist.main44
                        System.Directory.doesDirectoryExist2
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Util.$wcheck
                        ww
                        ww1
                        ipv1
                        DoesPathExist.main41
                        Util.expect5
                        Util.expect2
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case System.Posix.Directory.createDirectory1
                        DoesPathExist.main40
                        System.Directory.createDirectory2
                          `cast`
                        (Sym (System.Posix.Types.N:CMode[0]))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case System.IO.appendFile2
                        @ ()
                        DoesPathExist.main39
                        GHC.IO.IOMode.WriteMode
                        DoesPathExist.main36
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case System.IO.appendFile2
                        @ ()
                        DoesPathExist.main35
                        GHC.IO.IOMode.WriteMode
                        DoesPathExist.main36
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        DoesPathExist.main32
                        System.Directory.doesDirectoryExist2
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 let {
                   $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     <join 1> {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case GHC.Prim.catch#
                            @ GHC.Types.Bool
                            @ GHC.Exception.SomeException
                            DoesPathExist.main29
                            System.Directory.doesDirectoryExist2
                            w1 of ds7 { (#,#) ipv12 ipv13 ->
                     case Util.$wcheck
                            ww
                            ww1
                            ipv13
                            DoesPathExist.main26
                            Util.expect5
                            Util.expect2
                            ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                     case GHC.Prim.catch#
                            @ GHC.Types.Bool
                            @ GHC.Exception.SomeException
                            DoesPathExist.main23
                            System.Directory.doesDirectoryExist2
                            ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                     case Util.$wcheck
                            ww
                            ww1
                            ipv17
                            DoesPathExist.main20
                            Util.expect5
                            Util.expect2
                            ipv16 of ds10 { (#,#) ipv18 ipv19 ->
                     case GHC.Prim.catch#
                            @ GHC.Types.Bool
                            @ GHC.Exception.SomeException
                            DoesPathExist.main17
                            System.Directory.doesDirectoryExist2
                            ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                     case Util.$wcheck
                            ww
                            ww1
                            ipv21
                            DoesPathExist.main14
                            Util.expect5
                            Util.expect2
                            ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                     case GHC.Prim.catch#
                            @ GHC.Types.Bool
                            @ GHC.Exception.SomeException
                            DoesPathExist.main11
                            System.Directory.doesDirectoryExist2
                            ipv22 of ds13 { (#,#) ipv24 ipv25 ->
                     Util.$wcheck
                       ww
                       ww1
                       ipv25
                       DoesPathExist.main8
                       Util.expect5
                       Util.expect2
                       ipv24 } } } } } } }
                 } in
                 case ipv11 of wild {
                   GHC.Types.False
                   -> case Util.$wprintInfo
                             ww1
                             DoesPathExist.main7
                             ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                      $w$j ipv12 }
                   GHC.Types.True
                   -> case ww
                             `cast`
                           (Nth:2
                                (Trans
                                     (<GHC.IORef.IORef GHC.Types.Int>_R
                                      ->_R GHC.Types.N:IO[0] <GHC.Types.Int>_R)
                                     (GHC.IORef.N:IORef[0] <GHC.Types.Int>_N
                                      ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                  GHC.Types.Int #)>_R))) of wild1 { GHC.STRef.STRef var# ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             var#
                             ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                      case ipv13 of wild2 { GHC.Types.I# x ->
                      case GHC.Prim.writeMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             var#
                             (GHC.Types.I# (GHC.Prim.+# x 1#))
                             ipv12 of s2# { DEFAULT ->
                      case Util.check4
                             DoesPathExist.main2
                             s2# of ds8 { (#,#) ipv14 ipv15 ->
                      $w$j ipv14 } } } } } } } } } } } }) -}
943453dfaa87cf43224ab6b3e34f212f
  main :: Util.TestEnv -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U(U(U),U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DoesPathExist.main1
                  `cast`
                (<Util.TestEnv>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
033745e9ab2276b2ed18494da5a2ca3a
  main1 ::
    Util.TestEnv
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(U(U),U,A,A)><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Util.TestEnv)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Util.TestEnv ww1 ww2 ww3 ww4 ->
                 DoesPathExist.$wmain ww1 ww2 w1 }) -}
26d26e9aebef9495708b650f8b3e4ea8
  main10 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (22) -}
66d47ed50513f10eb93beedafb7bd50d
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case System.Posix.Files.getFileStatus1
                        DoesPathExist.main12
                        eta1 of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.True #) }) -}
aabd1eec76fc62d97c88ef13929f4cc8
  main12 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.normalise
                   (GHC.CString.unpackCStringUtf8# DoesPathExist.main13)) -}
0639172e9dca4e1d4b0875569f8474f0
  main13 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\207\\128\\208\\175\\233\\159\\179\\195\\166\\226\\136\\158"#) -}
0666ba61e7f0f4e3b7e0e68514cc3ee8
  main14 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DoesPathExist.main15
                   (GHC.Types.[] @ GHC.Base.String)) -}
48b3126e925a1f500a7a1edff6c639d2
  main15 :: GHC.Base.String
  {- Unfolding: (Util.showContext_$sshowContext
                   (GHC.CString.unpackCString# DoesPathExist.main6)
                   DoesPathExist.main16
                   GHC.Tuple.()) -}
3ececda57b6767bcfe28f4ec95f2536f
  main16 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (17) -}
d06506da41c6a647af07212dc31c0845
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case System.Posix.Files.getFileStatus1
                        DoesPathExist.main18
                        eta1 of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.True #) }) -}
66fcd329a1f02fbeb3a56788c714f4c8
  main18 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.normalise
                   (GHC.CString.unpackCString# DoesPathExist.main19)) -}
0bddc5ab72d79ab61fc68c954a9652d3
  main19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("./somefile"#) -}
c67a3b716d5b47945a76e434b3637fc2
  main2 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Base.++
                   @ [GHC.Types.Char]
                   DoesPathExist.main3
                   Util.expect2) -}
3c884c25f7eb8556fa0613ad25e70611
  main20 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DoesPathExist.main21
                   (GHC.Types.[] @ GHC.Base.String)) -}
e7b3ce18fd87044747b7a3eb34ff1731
  main21 :: GHC.Base.String
  {- Unfolding: (Util.showContext_$sshowContext
                   (GHC.CString.unpackCString# DoesPathExist.main6)
                   DoesPathExist.main22
                   GHC.Tuple.()) -}
564e3e907ff883397f3a57683ef5b206
  main22 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (16) -}
068df0a91160443aaa689a9097aa8bea
  main23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case System.Posix.Files.getFileStatus1
                        DoesPathExist.main24
                        eta1 of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.True #) }) -}
bbc5ad52f0796d26e55f9c46da5b59b5
  main24 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.normalise
                   (GHC.CString.unpackCString# DoesPathExist.main25)) -}
0a3467ade6a47e8b0b418865c2d420bf
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("somefile"#) -}
405aecb1a0427fb0b8205a74934166f0
  main26 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DoesPathExist.main27
                   (GHC.Types.[] @ GHC.Base.String)) -}
ed10c4ef4c8c80aac4e6e692e72752d3
  main27 :: GHC.Base.String
  {- Unfolding: (Util.showContext_$sshowContext
                   (GHC.CString.unpackCString# DoesPathExist.main6)
                   DoesPathExist.main28
                   GHC.Tuple.()) -}
0f4a40bd497ecc0e4e6fa6e7a668345c
  main28 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (15) -}
6eba7d47246806997df272926b5bfafc
  main29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case System.Posix.Files.getFileStatus1
                        DoesPathExist.main30
                        eta1 of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.True #) }) -}
751784ba61dec6c41a29ab47c5ba0e2a
  main3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DoesPathExist.main4
                   (GHC.Types.[] @ GHC.Base.String)) -}
3a5146b184bd1bf6d25b19bbd43d87ed
  main30 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.normalise
                   (GHC.CString.unpackCString# DoesPathExist.main31)) -}
32fae73176a6400e661c3ab39813bc27
  main31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("somedir"#) -}
c5daf5425934b351a69446f85484c627
  main32 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case System.Posix.Files.getFileStatus1
                        DoesPathExist.main33
                        eta1 of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.True #) }) -}
bb0e6dfa2fb631369fbc92a10c168e6f
  main33 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.normalise
                   (GHC.CString.unpackCString# DoesPathExist.main34)) -}
251f12b4a16a38f45aadc715823a1de8
  main34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nonexistent"#) -}
be15f9677e83fff9d681e65a09f3df8c
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   DoesPathExist.main13) -}
4d24ed42845c963331bc2504d5b12a44
  main36 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   hdl
                   DoesPathExist.main37
                   GHC.Types.False) -}
a86fe3f59ff41055910f22b3196913fe
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# DoesPathExist.main38) -}
6a8305f985feddc1791167ea4b7e0e49
  main38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("somedata"#) -}
1dcdc4427951c319a31f479013aaf17d
  main39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# DoesPathExist.main25) -}
97d771882302e78fba976c2b20260aab
  main4 :: GHC.Base.String
  {- Unfolding: (Util.showContext_$sshowContext
                   (GHC.CString.unpackCString# DoesPathExist.main6)
                   DoesPathExist.main5
                   GHC.Tuple.()) -}
a2a5389dcb16d7ab9cdcd93064fe9ee7
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# DoesPathExist.main31) -}
0868290f50dcbd6e0682067d0fed5eeb
  main41 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DoesPathExist.main42
                   (GHC.Types.[] @ GHC.Base.String)) -}
0358486cc561322e7778e2501b9f6df8
  main42 :: GHC.Base.String
  {- Unfolding: (Util.showContext_$sshowContext
                   (GHC.CString.unpackCString# DoesPathExist.main6)
                   DoesPathExist.main43
                   GHC.Tuple.()) -}
353ab44a7395fe65a21f9247772f2bf5
  main43 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (8) -}
a2a4c9d6f68ebe0ca6ebbe5d4e06751d
  main44 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case System.Posix.Files.getFileStatus1
                        DoesPathExist.main45
                        eta1 of ds6 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Types.True #) }) -}
1288d01437b0fb7364db7fd07be87e60
  main45 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.normalise
                   (GHC.CString.unpackCString# DoesPathExist.main46)) -}
ee07d68b0ae6a337ba6aa47545c9cd5a
  main46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
bf0516018827431d6bea3e08b40a73a3
  main5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (14) -}
ee9c551e00bc283e602d68fdfce95e02
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tests/DoesPathExist.hs"#) -}
5f50a81b7bd3164e58545e5f9bb1f9ba
  main7 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Base.++
                   @ [GHC.Types.Char]
                   DoesPathExist.main3
                   Util.expect5) -}
3ab5b48339689361622f3f28a05d8ec6
  main8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DoesPathExist.main9
                   (GHC.Types.[] @ GHC.Base.String)) -}
e9799ab5d4d0a08b6256b616e55b08f8
  main9 :: GHC.Base.String
  {- Unfolding: (Util.showContext_$sshowContext
                   (GHC.CString.unpackCString# DoesPathExist.main6)
                   DoesPathExist.main10
                   GHC.Tuple.()) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

