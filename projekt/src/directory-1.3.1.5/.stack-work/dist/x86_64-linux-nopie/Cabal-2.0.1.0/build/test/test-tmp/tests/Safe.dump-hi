
==================== FINAL INTERFACE ====================
2018-01-21 20:57:07.668032926 UTC

interface main:Safe 8022
  interface hash: 38e3f92fc1959b6a7b4995677577e552
  ABI hash: 2909366129d6f24b8b26560f53209876
  export-list hash: 25c4f4f4dca0309e7b117c2a267ce21e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 53ab1df1fcb621a941d2fe163718c51f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Safe.main
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0* deepseq-1.4.3.0
                      directory-1.3.1.5 filepath-1.4.1.2 ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0 time-1.8.0.2 unix-2.7.2.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import safe base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import safe base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import safe directory-1.3.1.5:System.Directory 674a63b5dfd5e6dd78c98f0675c7b451
import safe ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
a6eba61c01275e52e0ad6fc1a333a2a3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Safe.$trModule3 Safe.$trModule1) -}
7e13ca5f02a701bd4110426c2bb2ac5d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Safe.$trModule2) -}
8b444f8a6f652233808831084b6f652c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Safe"#) -}
e6597f480205c5347c775e716382f564
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Safe.$trModule4) -}
62c65e63826ae98a13ed3ee76f98ff26
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
799685bec976916c38fe422759fb5fb9
  main :: a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Safe.main1
                  `cast`
                (forall (a :: <*>_N). <a>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
52553ffe5e9852149bd85bd70dd5499a
  main1 ::
    a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a (ds :: a) (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, GHC.Tuple.() #)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

